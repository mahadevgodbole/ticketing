//install kubectl (no need if we want to use local one)
$ gcloud components install kubectl
//get cluster auth ()
$gcloud container clusters get-credentials ticketing-dev

//which one is running kubectl context
//$ kubectl config get-contexts

//To change docker use following command 
$ kubectl config use-context docker-desktop


//install gcloud ingress-nginx
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.1/deploy/static/provider/cloud/deploy.yaml

//for gcloud
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.1/deploy/static/provider/cloud/deploy.yaml

//modify host file for domain naming

//erorr 
https://stackoverflow.com/questions/74381993/error-in-using-gcloud-auth-application-default-login-cmd-in-gcloud-cli

//check image name on all file

skaffold dev --cleanup=false



create secret
//$ kubectl create secret generic jwt-secret --from-literal=JWT_KEY=asdf
$ kubectl get secrets






//kubernet running or not 
// 17-08-2023

kubectl version

$ kubectl apply -f posts.yaml //run the yaml file (config)

$ kubectl get pods // get all running pods

// kubectl exec -it [pos_name] [cmd]

// kubectl exec -it posts sh // open shell by using above command

// kubectl logs posts

// kubectl delete pod posts // delete pod

Deployments:
 // Get running deployments.
 $ kubectl get deployments

 // delete deployments.
 $ kubectl delete deployments posts-depl

 // info of deployments.
 $ kubectl descrive deployment posts-depl

 // Create Deployments.
 $ kubectl apply -f posts-depl.yaml
 
 //if some changes made in the deployment file(like change the version of it)
 $ kubectl apply -f posts-depl.yaml
 deployment.apps/posts-depl configured
 
 // restart deployment
 $ kubectl rollout restart deployment posts-depl

// kubectl delete -A ValidatingWebhookConfiguration ingress-nginx-admission

 //to get logs of running pod
 $ kubectl get pods
 $ kubectl logs posts-depl-7b46986b86-8s6lh


//to get namespace.
$ k get namespace
//list this particular namespace services by using -n flag and name space name 
$ kubectl get services -n ingress-nginx

Services: (this services inside kubernet)
    // Created services
    $ kubectl apply -f posts-srv.yaml


    $ kubectl get services ///NodePort 3xxxx is used to access from outside

    $ kubectl describe service posts-srvke

//restart deployment when any change made in code.
 $ kubectl rollout restart deployment event-bus-depl



//install kubectl (no need if we want to use local one)
$ gcloud components install kubectl
//get cluster auth ()
$gcloud container clusters get-credentials ticketing-dev

//which one is running kubectl context
//$ kubectl config get-contexts

//To change docker use following command 
$ kubectl config use-context docker-desktop


//install gcloud ingress-nginx
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.1/deploy/static/provider/cloud/deploy.yaml

//for gcloud
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.1/deploy/static/provider/cloud/deploy.yaml

//modify host file for domain naming

//erorr 

//check image name on all file

skaffold dev --cleanup=false


// go inside the teminal
 kubectl exec -it auth-depl-78cfc8bbb8-xxchw   sh 

 // port forwarding
 $ kubectl port-forward deploymentsName 4222:4222
$ kubectl port-forward nats-depl-86bc9cfdb8-zsxm8 4222:4222


//to go into monitoring service
$kubectl port-forward nats-depl-7db977c6fd-2mkk5 8222:8222

//service address

http://localhost:8222/streaming